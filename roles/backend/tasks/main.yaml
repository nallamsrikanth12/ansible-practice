- name: disable the noddejs
  ansible.builtin.command: "dnf module disable nodejs -y"

- name: enable the nodejs:20
  ansible.builtin.command: "dnf module enable nodejs:20 -y"


- name: install the nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: latest
  

- name: add the user
  ansible.builtin.user:
    name: expense

- name: create a directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download the  code and unzip the code
  ansible.builtin.unarchive:
    src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /app
    remote_src: yes

- name: copy the code
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: deamon reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: start the enabled the service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes

- name: install the nodejs
  ansible.builtin.dnf:
    name: mysql
    state: latest



- name: install python mysql dependencies
  ansible.builtin.pip: 
    name:
    - PyMySQL # to connect MySQL DB from Ansible
    - cryptography
    executable: pip3.9 # pip3.11 if python version is 3.11


- name: load scheme
  community.mysql.mysql_db:
    login_user: "{{login_user}}"
    login_password: "{{sql_root_password}}"
    login_host: "{{login_host}}"
    name: all
    state: import
    target: /app/schema/backend.sql


- name: start and enable the service
  ansible.builtin.service:
    name: backend
    state: restarted



